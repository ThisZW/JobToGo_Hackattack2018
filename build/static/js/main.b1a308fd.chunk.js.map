{"version":3,"sources":["components/map.jsx","components/jobs.jsx","components/signin.jsx","components/signup.jsx","App.js","serviceWorker.js","index.js"],"names":["MiniMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","document","title","state","locations","react_default","a","createElement","map_MapContainer","google","destCoords","React","Component","MapContainer","loadMap","loadMarkers","maps","mapRef","refs","map","node","ReactDOM","findDOMNode","centerNode","lat","parseFloat","lng","mapConfig","assign","center","zoom","mapTypeId","Map","Marker","position","icon","url","anchor","Point","scaledSize","Size","setMap","TrafficLayer","row","ref","style","height","GoogleApiWrapper","apiKey","jobListUrl","listStyles","margin","card","borderColor","boxShadow","jobs","axios","get","then","res","setState","jobList","data","console","log","className","keys","v","i","reqs","requirement","val","pay","employer","detail","join","jobs_MapWrapper","location","MapWrapper","_this2","apply","arguments","show","forEach","method","bind","assertThisInitialized","es_button","marginTop","onClick","type","theme","Animate","transitionName","transitionAppear","key","Signin","email","password","loading","signin","_this$state","firebase","auth","signInWithEmailAndPassword","user","window","cookie","save","path","catch","err","message","error","_this$state2","input","required","size","placeholder","prefix","value","onChange","e","target","block","display","marginLeft","href","PureComponent","signup","name","createUserWithEmailAndPassword","errorMessage","success","_this3","Header","Layout","App","Content","componentDidMount","isGeolocationAvailable","isGeolocationEnabled","positionError","coords","BrowserRouter","Switch","Route","component","Signup","exact","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","Boolean","hostname","match","initializeApp","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b1a308fd.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Col, Row} from 'antd';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport { withRouter } from 'react-router-dom'\nimport ReactDOM from 'react-dom'\n\n\n/**\n * Facility Map\n */\nconst lat = 40.741669\nconst lng = -73.820770\n\nclass MiniMap extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {locations: []}; \n  }\n\n  //set page title\n  componentWillMount = () => {\n    document.title = \"\"\n  }\n  \n  render(){\n    return(\n      <MapContainer\n        google={this.props.google}\n        destCoords={this.props.destCoords}\n      />\n    )\n  }\n}\n\nclass MapContainer extends Component{\n  componentDidMount() {\n    this.loadMap(); // call loadMap function to load the google map\n    this.loadMarkers();\n  }\n\n  componentDidUpdate(){\n      this.loadMap(); // call loadMap function to load the google map\n      this.loadMarkers();\n  }\n  loadMarkers(){\n    const {google} = this.props;\n    //console.log(locations);\n    /*locations.forEach( (v, i) =>{\n      var index = i+1;\n      var marker =new google.maps.Marker({\n        position: {lat: parseFloat(v.latitude), \n                  lng: parseFloat(v.longitude),\n                }, // sets position of marker to specified location\n        label: index.toString(),\n        map: this.map, // sets markers to appear on the map we just created on line 35\n        title: v.hospital_name,\n      });\n      marker.setMap(this.map);\n    })*/\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) { // checks to make sure that props have been passed\n      const {google} = this.props; // sets props equal to google\n      const maps = google.maps; // sets maps to google maps props\n\n      const mapRef = this.refs.map; // looks for HTML div ref 'map'. Returned in render below.\n      const node = ReactDOM.findDOMNode(mapRef); // finds the 'map' div in the React DOM, names it node\n\n      const centerNode = {lat: parseFloat(lat), lng: parseFloat(lng)};\n\n      const mapConfig = Object.assign({}, {\n        center: centerNode,\n        zoom: 14, // sets zoom. Lower numbers are zoomed further out.\n        mapTypeId: 'roadmap' // optional main map layer. Terrain, satellite, hybrid or roadmap--if unspecified, defaults to roadmap.\n      })\n\n      this.map = new maps.Map(node, mapConfig); // creates a new Google map on the specified node (ref='map') with the specified configuration set above.\n  \n      var marker =new google.maps.Marker({\n        position: centerNode, // sets position of marker to specified location\n        icon: {\n          url: \"/my_location.png\",\n          anchor: new google.maps.Point(24,24),\n          scaledSize: new google.maps.Size(24,24),\n        },\n        map: this.map, // sets markers to appear on the map we just created on line 35\n      });\n      marker.setMap(this.map);\n\n      var trafficLayer = new google.maps.TrafficLayer();\n      trafficLayer.setMap(this.map);\n    }\n  }\n\n  loadExtras(){\n    //this.state.locations.forEach(location => { // iterate through locations saved in state\n      /*const marker = new google.maps.Marker({\n        position: {lat: location.latitude, lng: location.longitude}, // sets position of marker to specified location\n        map: this.map, // sets markers to appear on the map we just created on line 35\n        title: location.name // the title of the marker is set to the name of the location\n      });*/\n  }\n  \n\n  render() {\n    const style = { // MUST specify dimensions of the Google map or it will not work. Also works best when style is specified inside the render function and created as an object\n      height: '300px' // 75vh similarly will take up roughly 75% of the height of the screen. px also works.\n    }\n    return (\n      <Row>\n          <div ref=\"map\" style={style}>\n            loading map...\n          </div>\n      </Row>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyDbvmQGBFexX5Dk0nbbVJ-sIq3QOtprm7M\",\n})(MiniMap)\n","import React, { Component } from 'react';\nimport {Row, Card, Button, Icon} from 'antd';\nimport MiniMap from './map';\nimport axios from 'axios';\nimport Animate from 'rc-animate';\n\n\nconst jobListUrl = 'https://jobtogo-504b3.firebaseio.com/job.json'\n\nconst listStyles = {\n  row: {\n    margin : \"1rem\",\n  },\n  card: {\n    borderColor: \"black\",\n    boxShadow: \"2px 4px 2px 1px rgba(44,44,44, 0.3)\"\n  }\n}\nclass jobs extends Component{\n  \n  constructor(){\n    super()\n    this.state = {\n      jobList: '',\n    }\n  }\n//?orderBy=\"employer\"&equalTO=false\n  componentWillMount = () =>{\n    axios.get(jobListUrl)\n    .then( res => {\n      this.setState({\n        jobList: res.data\n      })\n      console.log(this.state.jobList)\n    })\n  }\n\n  render(){\n    const jobList = this.state.jobList;\n    return(\n      <div className=\"list-jobs-container\">\n      {Object.keys(jobList).map((v, i) => {\n        let reqs;\n        jobList[v]['requirement'] && \n        (reqs = jobList[v].requirement.map( val=>{\n          return val;\n        }))\n        return (\n          <Row style={listStyles.row}>\n            <Card title={jobList[v].title} style={listStyles.card}> \n              You will get paid by: $<b>{jobList[v].pay}</b><br/>\n              Posted by: <b>{jobList[v].employer}</b><br/>\n              {jobList[v].detail}<br/>\n              Requirements:&nbsp;\n              {reqs && reqs.join(', ')}\n              <MapWrapper destCoords={jobList[v].location}/>\n            </Card>\n          </Row>\n        )\n      })}\n      </div>\n    );\n  }\n}\n\nclass MapWrapper extends Component{\n  constructor() {\n    super(...arguments);\n    this.state = {\n      show: false,\n    };\n    [\n      'onClick',\n    ].forEach((method) => this[method] = this[method].bind(this));\n  }\n  \n  onClick(){\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n  \n  render(){\n    return (\n      <div className=\"code-box-demo-wrapper\">\n        <p className=\"buttons\">\n          <Button style={{marginTop:10}} onClick={this.onClick}><Icon type=\"down\" theme=\"outlined\" /></Button>\n        </p>\n        <Animate\n          transitionName=\"fade\"\n          transitionAppear\n        >\n          {this.state.show ? \n            <MiniMap key=\"1\"/> : null}\n        </Animate>\n      </div>\n    );\n  }\n}\n\nexport default jobs\n\n//name, poster, detail, date, quote, ","import {Button, Card, Icon, Input, message} from 'antd';\nimport React, { PureComponent } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport cookie from 'react-cookies'\n  \n  export default class Signin extends PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        email: '',\n        password: '',\n        loading: false,\n      };\n      this.signin = this.signin.bind(this);\n    }\n  \n    signin() {\n      const { email, password } = this.state;\n      if (email === '' || password === '') {\n        message.error('Looks like you\\'re missing something.');\n        return;\n      }\n      firebase.auth().signInWithEmailAndPassword(email, password)\n        .then((user) => {\n          if (user) {\n            window.location = '/jobs';\n            cookie.save('userEmail', email, { path: '/' });  // user cookie.load('userEmail') later\n          }\n        })\n        .catch((err) => {\n          message.error(err.message);\n        });\n    }\n      \n    render() {\n      const { email, password, loading } = this.state;\n      return (\n        <div className=\"signin\">\n          <Card\n            className=\"signin-card\"\n            title=\"Sign In\"\n          >\n            <div>\n              <Input\n                required\n                size=\"large\"\n                placeholder=\"E-Mail\"\n                prefix={<Icon type=\"mail\" />}\n                style={{ marginTop: 10 }}\n                type=\"email\"\n                value={email}\n                onChange={(e) => { this.setState({ email: e.target.value }); }}\n              />\n              <Input\n                required\n                size=\"large\"\n                placeholder=\"Password\"\n                prefix={<Icon type=\"ellipsis\" />}\n                style={{ marginTop: 10 }}\n                type=\"password\"\n                value={password}\n                onChange={(e) => { this.setState({ password: e.target.value }); }}\n              />\n              <Button icon=\"check-circle\" size=\"large\" block style={{ marginTop: 10 }} onClick={this.signin} loading={loading} type=\"primary\">\n                <p style={{ margin: 0, display: 'inline', marginLeft: 10 }}>Sign In</p>\n              </Button>\n              <Button size=\"large\" block style={{ marginTop: 10 }} href=\"/signup\">\n                <p style={{ margin: 0, display: 'inline' }}>Don&#39;t have an account? Sign Up.</p>\n              </Button>\n            </div>\n          </Card>\n        </div>\n      );\n    }\n  }\n  ","import {Button, Card, Icon, Input, message} from 'antd';\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\n\nexport default class signup extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        email: null,\n        name: null,\n        password: null,\n        loading: false\n      };\n      this.signup = this.signup.bind(this);\n    }\n  \n    signup() {\n      this.setState({ loading: true });\n      const {\n        name, password, email,\n      } = this.state;\n      if (!name || !password || !email) {\n        message.error('Looks like you\\'re missing something.');\n        this.setState({ loading: false });\n        return;\n      }\n      if (name === '' || password === '' || email === '') {\n        message.error('Looks like you\\'re missing something.');\n        this.setState({ loading: false });\n        return;\n      }\n      firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\n        var errorMessage = error.message;\n        console.log(errorMessage);\n      }).then((user) => {\n          if (user) {\n            message.success('Signed Up. Redirecting..');\n            window.location = '/jobs';\n          }\n          else {\n          this.setState({ loading: false });\n        }\n      }).catch((err) => {\n        console.log('Signup Err', err);\n        this.setState({ loading: false });\n      });\n    }\n  \n    render() {\n      const {\n        name, loading\n      } = this.state;\n      return (\n        <div className=\"signup\">\n          <Card\n            className=\"signup-card\"\n            title=\"Sign Up\"\n          >\n            <div>\n              <Input\n                size=\"large\"\n                placeholder=\"Full Name\"\n                prefix={<Icon type=\"user\" />}\n                style={{ marginTop: 10 }}\n                value={name}\n                onChange={(e) => { this.setState({ name: e.target.value }); }}\n              />\n              <Input\n                size=\"large\"\n                placeholder=\"E-Mail\"\n                prefix={<Icon type=\"mail\" />}\n                style={{ marginTop: 10 }}\n                type=\"email\"\n                onChange={(e) => { this.setState({ email: e.target.value }); }}\n              />\n              <Input\n                size=\"large\"\n                placeholder=\"Password\"\n                prefix={<Icon type=\"ellipsis\" />}\n                style={{ marginTop: 10 }}\n                type=\"password\"\n                onChange={(e) => { this.setState({ password: e.target.value }); }}\n              />\n              <Button icon=\"check-circle\" size=\"large\" block style={{ marginTop: 10 }} onClick={this.signup} loading={loading} type=\"primary\">\n                <p style={{ margin: 0, display: 'inline', marginLeft: 10 }}>Sign Up</p>\n              </Button>\n            </div>\n          </Card>\n        </div>\n      );\n    }\n  }\n","import React, { Component } from 'react';\nimport jobs from './components/jobs';\nimport Signin from './components/signin';\nimport Signup from './components/signup';\nimport MiniMap from './components/map';\nimport {geolocated} from 'react-geolocated';\nimport { Layout } from 'antd';\nimport './App.css';\nimport \"antd/dist/antd.css\";\n\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nconst { Header, Content } = Layout;\n\nclass App extends Component {\n\n  componentDidMount = () => {\n    if (!this.props.isGeolocationAvailable)\n    console.log('does not support!');\n    else if (!this.props.isGeolocationEnabled)\n      console.log('user rejected!');\n    else {\n      if(!this.props.positionError){\n        console.log(this.props)\n        console.log(this.props.coords);\n      }\n      else\n        console.log(this.props.positionError);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Switch>\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/\" exact component={Signin} />\n            <Route path=\"/signin\" component={Signin} />\n            <div className=\"container-with-header\">\n              <Header className=\"App-header\">\n                Welcome to JobToGo\n              </Header>\n              <Route path=\"/jobs\" component={jobs} />\n              <Route path=\"/map\" component={MiniMap} />\n            </div>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default geolocated({\n\tpositionOptions: {\n\t\tenableHighAccuracy: true,\n\t},\n\tuserDecisionTimeout: 5000,\n})(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase/app';\nimport {FirebaseApp} from './App';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyB2kR8bG77BibtbSdkRZ_MTHS0gU8GD8zY\",\n    authDomain: \"jobtogo-504b3.firebaseapp.com\",\n    databaseURL: \"https://jobtogo-504b3.firebaseio.com\",\n    projectId: \"jobtogo-504b3\",\n    storageBucket: \"jobtogo-504b3.appspot.com\",\n    messagingSenderId: \"837084623308\"\n  };\n  firebase.initializeApp(config);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}